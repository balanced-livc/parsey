<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="369.7917px" preserveAspectRatio="none" style="width:564px;height:369px;background:#00000000;" version="1.1" viewBox="0 0 564 369" width="564.5833px" zoomAndPan="magnify"><defs><linearGradient id="gs5q2cb33rml80" x1="50%" x2="50%" y1="0%" y2="100%"><stop offset="0%" stop-color="#33B2E2"/><stop offset="100%" stop-color="#009FDB"/></linearGradient></defs><g><!--MD5=[c5cd84aa17ce706d3c5e9419966d76aa]
cluster parsly--><g id="cluster_parsly"><path d="M27.0833,16.6667 L102.0833,16.6667 A15.625,15.625 0 0 1 112.5,27.0833 L119.7917,63.8346 L425,63.8346 A10.4167,10.4167 0 0 1 435.4167,74.2513 L435.4167,346.875 A10.4167,10.4167 0 0 1 425,357.2917 L27.0833,357.2917 A10.4167,10.4167 0 0 1 16.6667,346.875 L16.6667,27.0833 A10.4167,10.4167 0 0 1 27.0833,16.6667 " fill="none" style="stroke:#33B2E2;stroke-width:2.0833333333333335;"/><line style="stroke:#33B2E2;stroke-width:2.0833333333333335;" x1="16.6667" x2="119.7917" y1="63.8346" y2="63.8346"/><text fill="#009FDB" font-family="&quot;Verdana&quot;" font-size="20.8333" font-weight="bold" lengthAdjust="spacing" textLength="72.9167" x="29.1667" y="46.4213">parsly</text></g><!--MD5=[c89721eb0926065c39d97eb59a5b097f]
entity parsly-ctl:\nCLI Rust client--><g id="elem_parsly-ctl:\nCLI Rust client"><rect fill="url(#gs5q2cb33rml80)" height="77.0182" rx="10.4167" ry="10.4167" style="stroke:#33B2E2;stroke-width:1.0416666666666667;" width="148.9583" x="236.9792" y="263.5417"/><rect fill="url(#gs5q2cb33rml80)" height="10.4167" style="stroke:#33B2E2;stroke-width:1.0416666666666667;" width="15.625" x="365.1042" y="268.75"/><rect fill="url(#gs5q2cb33rml80)" height="2.0833" style="stroke:#33B2E2;stroke-width:1.0416666666666667;" width="4.1667" x="363.0208" y="270.8333"/><rect fill="url(#gs5q2cb33rml80)" height="2.0833" style="stroke:#33B2E2;stroke-width:1.0416666666666667;" width="4.1667" x="363.0208" y="275"/><text fill="#FFFFFF" font-family="&quot;Verdana&quot;" font-size="12.5" lengthAdjust="spacing" textLength="62.5" x="260.9375" y="304.3111">parsly-ctl:</text><text fill="#FFFFFF" font-family="&quot;Verdana&quot;" font-size="12.5" lengthAdjust="spacing" textLength="90.625" x="260.9375" y="318.8619">CLI Rust client</text></g><!--MD5=[d66ce9c5d06ae80557f95c3da97411a6]
entity parsly:\nPython gRPC messaging service and OpenAI client--><g id="elem_parsly:\nPython gRPC messaging service and OpenAI client"><rect fill="url(#gs5q2cb33rml80)" height="77.0182" rx="10.4167" ry="10.4167" style="stroke:#33B2E2;stroke-width:1.0416666666666667;" width="384.375" x="33.8542" y="77.0833"/><rect fill="url(#gs5q2cb33rml80)" height="10.4167" style="stroke:#33B2E2;stroke-width:1.0416666666666667;" width="15.625" x="397.3958" y="82.2917"/><rect fill="url(#gs5q2cb33rml80)" height="2.0833" style="stroke:#33B2E2;stroke-width:1.0416666666666667;" width="4.1667" x="395.3125" y="84.375"/><rect fill="url(#gs5q2cb33rml80)" height="2.0833" style="stroke:#33B2E2;stroke-width:1.0416666666666667;" width="4.1667" x="395.3125" y="88.5417"/><text fill="#FFFFFF" font-family="&quot;Verdana&quot;" font-size="12.5" lengthAdjust="spacing" textLength="42.7083" x="57.8125" y="117.8528">parsly:</text><text fill="#FFFFFF" font-family="&quot;Verdana&quot;" font-size="12.5" lengthAdjust="spacing" textLength="326.0417" x="57.8125" y="132.4036">Python gRPC messaging service and OpenAI client</text></g><!--MD5=[e00b0ddb787c7735d06bb13a3b38db8f]
entity OpenAI--><g id="elem_OpenAI"><ellipse cx="464.5833" cy="115.625" fill="#FFFFFF" rx="8.3333" ry="8.3333" style="stroke:#000000;stroke-width:1.0416666666666667;"/><text fill="#5A5A5A" font-family="&quot;Verdana&quot;" font-size="12.5" lengthAdjust="spacing" textLength="45.8333" x="478.6458" y="153.2694">OpenAI</text><text fill="#5A5A5A" font-family="&quot;Verdana&quot;" font-size="12.5" lengthAdjust="spacing" textLength="17.7083" x="478.6458" y="167.8202">via</text><text fill="#5A5A5A" font-family="&quot;Verdana&quot;" font-size="12.5" lengthAdjust="spacing" textLength="71.875" x="478.6458" y="182.371">LlamaIndex</text></g><!--MD5=[b33bd656212286946e0f6485ee27f6f9]
entity PDF--><g id="elem_PDF"><ellipse cx="461.4583" cy="302.0833" fill="#FFFFFF" rx="8.3333" ry="8.3333" style="stroke:#000000;stroke-width:1.0416666666666667;"/><text fill="#5A5A5A" font-family="&quot;Verdana&quot;" font-size="12.5" lengthAdjust="spacing" textLength="55.2083" x="470.8333" y="339.7278">PDF with</text><text fill="#5A5A5A" font-family="&quot;Verdana&quot;" font-size="12.5" lengthAdjust="spacing" textLength="81.25" x="470.8333" y="354.2786">tabular data</text></g><!--MD5=[79544e31536ea7248ac40ab65fb3b99f]
link parsly:\nPython gRPC messaging service and OpenAI client to parsly-ctl:\nCLI Rust client--><g id="link_parsly:\nPython gRPC messaging service and OpenAI client_parsly-ctl:\nCLI Rust client"><path d="M245.8229,159.375 C259.5938,189.0833 277.875,228.5521 291.6458,258.2813 " fill="none" id="parsly:\nPython gRPC messaging service and OpenAI client-parsly-ctl:\nCLI Rust client" style="stroke:#009FDB;stroke-width:3.125;"/><polygon fill="#009FDB" points="293.9896,263.3333,293.8379,253.0752,291.8042,258.6057,286.2737,256.5719,293.9896,263.3333" style="stroke:#009FDB;stroke-width:3.125;"/><polygon fill="#009FDB" points="243.5313,154.4271,243.6952,164.685,245.7223,159.1521,251.2552,161.1792,243.5313,154.4271" style="stroke:#009FDB;stroke-width:3.125;"/><text fill="#5A5A5A" font-family="&quot;Verdana&quot;" font-size="12.5" lengthAdjust="spacing" textLength="59.375" x="290.625" y="206.3944">PDF data</text><text fill="#5A5A5A" font-family="&quot;Verdana&quot;" font-size="12.5" lengthAdjust="spacing" textLength="65.625" x="287.5" y="220.9452">over gRPC</text></g><!--MD5=[81396d5b85008c160863ea66594b34ed]
link parsly:\nPython gRPC messaging service and OpenAI client to OpenAI--><g id="link_parsly:\nPython gRPC messaging service and OpenAI client_OpenAI"><path d="M423.8646,115.625 C432.4167,115.625 440.9688,115.625 449.5313,115.625 " fill="none" id="parsly:\nPython gRPC messaging service and OpenAI client-OpenAI" style="stroke:#009FDB;stroke-width:3.125;"/><polygon fill="#009FDB" points="454.8542,115.625,445.4792,111.4583,449.6458,115.625,445.4792,119.7917,454.8542,115.625" style="stroke:#009FDB;stroke-width:3.125;"/><polygon fill="#009FDB" points="418.4583,115.625,427.8333,119.7917,423.6667,115.625,427.8333,111.4583,418.4583,115.625" style="stroke:#009FDB;stroke-width:3.125;"/></g><!--MD5=[5ea027b10a41070d74459bc35b8e492d]
reverse link parsly-ctl:\nCLI Rust client to PDF--><g id="link_parsly-ctl:\nCLI Rust client_PDF"><path d="M391.8229,302.0833 C411.8958,302.0833 431.9688,302.0833 452.0417,302.0833 " fill="none" id="parsly-ctl:\nCLI Rust client-backto-PDF" style="stroke:#009FDB;stroke-width:3.125;"/><polygon fill="#009FDB" points="386.1667,302.0833,395.5417,306.25,391.375,302.0833,395.5417,297.9167,386.1667,302.0833" style="stroke:#009FDB;stroke-width:3.125;"/></g><!--MD5=[89688e65a569dc9c740a9f99d5c601e2]
@startuml design

!theme bluegray
skinparam classFontColor darkSlateGray
skinparam interface {
  BackgroundColor white
  BorderColor black
}

package "parsly" {
  [parsly-ctl:\nCLI Rust client] <-up-> [parsly:\nPython gRPC messaging service and OpenAI client] : PDF data\nover gRPC
}
interface "\t\t\tOpenAI\n\t\t\tvia\n\t\t\tLlamaIndex" as OpenAI
[parsly:\nPython gRPC messaging service and OpenAI client] <- -right- -> OpenAI

interface "\t\t\tPDF with\n\t\t\ttabular data" as PDF
[parsly-ctl:\nCLI Rust client] <- -right- - PDF

@enduml

@startuml design




skinparam backgroundColor transparent
skinparam useBetaStyle false








<style>
  root {
    BackgroundColor transparent
    FontColor #fff
    HyperLinkColor $ORANGE
    LineColor #007faf
    LineThickness 1
    Margin 10
    Padding 6
    Shadowing 0.0
  }
  node {
   Padding 15
   roundcorner 20
   BackgroundColor #009fdb-#007faf
  }
  caption {
    LineThickness 0
  }
  footer {
    LineThickness 0
  }
  groupHeader {
    BackgroundColor #f2f2f2
    FontColor #0568ae
    FontStyle bold
  }
  header {
    LineThickness 0
  }
  referenceHeader {
    BackgroundColor transparent
    FontColor #5a5a5a
    FontStyle bold
  }
  separator {
    BackgroundColor #5a5a5a
    FontColor transparent
    FontStyle bold
  }
  title {
	FontSize 20
	BorderRoundCorner            8
	BorderThickness 	         1
	BackgroundColor  #f5f5f5-#f2f2f2
	FontColor #009fdb
	BorderColor #f2f2f2
  }
  nwdiagDiagram {
	network {
		
	FontColor #fff
	BorderColor #33b2e2
	BackgroundColor #33b2e2-#009fdb
    
		LineColor #009fdb
		LineThickness 1.0
		FontColor #007faf
	}
	server {
		
	FontColor #fff
	BorderColor #33b2e2
	BackgroundColor #33b2e2-#009fdb

	}
	arrow {
		FontColor #007faf
		LineColor #007faf
	}
	group {
		BackGroundColor #d2d2d2
		LineColor $LIGHT_DARK
		LineThickness 2.0
		Margin 5
		Padding 5
	}
  }
  ganttDiagram {
	task {
		
	FontColor #fff
	BorderColor #33b2e2
	BackgroundColor #33b2e2-#009fdb

		LineColor #009fdb
		Margin 10
		Padding 6
	}
	note {
		FontColor #fff
		LineColor #04538b
		BackGroundColor #0568ae
	}
	separator {
		LineColor #f2f2f2
		BackGroundColor #f2f2f2-#c2c2c2
		FontColor #5a5a5a
	}
	milestone {
		FontColor #0568ae
		FontSize 16
		FontStyle italic
		BackGroundColor #f2f2f2
		LineColor #c2c2c2
	}
	timeline {
		BackgroundColor #f2f2f2
		FontColor #5a5a5a
	}
	closed {
		BackgroundColor #bb5d00
		FontColor #fff
	}
  }
</style>
skinparam defaultFontName        "Verdana"
skinparam defaultFontSize        12
skinparam dpi                    100
skinparam shadowing              false
skinparam roundcorner            20
skinparam ParticipantPadding     30
skinparam BoxPadding             40
skinparam Padding                8
skinparam ArrowColor             #959595
skinparam stereotype {
    CBackgroundColor #f5f5f5
    CBorderColor #c2c2c2
    ABackgroundColor #c4ca33
    ABorderColor #919700
    IBackgroundColor #d95555
    IBorderColor #a62222
    EBackgroundColor #ee9033
    EBorderColor #bb5d00
    NBackgroundColor #3786be
    NBorderColor #04538b
}
skinparam title {
	FontColor	                 #009fdb
	BorderColor	                 #c2c2c2
	FontSize	    	         20
	BorderRoundCorner            8
	BorderThickness 	         1
	BackgroundColor              #f5f5f5-#f2f2f2
}


skinparam legend {
	BackgroundColor #f2f2f2
	BorderColor #c2c2c2
	FontColor #5a5a5a
}

skinparam swimlane {
	BorderColor #0568ae
	BorderThickness 2
	TitleBackgroundColor  #f5f5f5-#f2f2f2
	TitleFontColor #009fdb
}


skinparam activity {
	FontColor #fff
	BorderColor #009fdb
	BackgroundColor #33b2e2-#009fdb
	BarColor #b5bd00
	StartColor #0568ae
	EndColor #0568ae
	DiamondBackgroundColor #f5f5f5-#c2c2c2
  	DiamondBorderColor #c2c2c2
	DiamondFontColor #5a5a5a
}


skinparam participant {
	
	FontColor #fff
	BorderColor #33b2e2
	BackgroundColor #33b2e2-#009fdb

	ParticipantBorderThickness 2
}


skinparam actor {
	
	FontColor #fff
	BorderColor #33b2e2
	BackgroundColor #33b2e2-#009fdb

	FontColor #009fdb
}


skinparam arrow {
	Thickness 3
	Color #009fdb
	FontColor #5a5a5a
}


skinparam sequence {
	BorderColor #009fdb
	TitleFontColor #009fdb
	BackgroundColor transparent
	StartColor #009fdb
	EndColor #009fdb
	BoxBackgroundColor #d2d2d2
	BoxBorderColor #959595
	BoxFontColor #5a5a5a
	DelayFontColor #5a5a5a
	LifeLineBorderColor #c2c2c2
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #f5f5f5
	GroupBorderColor #959595
	GroupFontColor #5a5a5a
	GroupHeaderFontColor #0568ae
	DividerBackgroundColor #fff-#d2d2d2
    DividerBorderColor #959595
    DividerBorderThickness 2
    DividerFontColor #5a5a5a
	ReferenceBackgroundColor transparent
	ReferenceBorderColor #959595
	ReferenceFontColor #5a5a5a
	ReferenceHeaderFontColor #0568ae
	StereotypeFontColor #fff
}


skinparam partition {
	BorderColor #009fdb
	FontColor #009fdb
	BackgroundColor transparent
}


skinparam collections {
	
	FontColor #fff
	BorderColor #33b2e2
	BackgroundColor #33b2e2-#009fdb

}


skinparam control {
	
	FontColor #fff
	BorderColor #33b2e2
	BackgroundColor #33b2e2-#009fdb

	FontColor #009fdb
}


skinparam entity {
	
	FontColor #fff
	BorderColor #33b2e2
	BackgroundColor #33b2e2-#009fdb

	FontColor #009fdb
}


skinparam boundary {
	
	FontColor #fff
	BorderColor #33b2e2
	BackgroundColor #33b2e2-#009fdb

	FontColor #009fdb
}


skinparam agent {
	BackgroundColor #orange
	BorderColor #999999
	FontColor #333333
}


skinparam note {
	BorderThickness 1
	BackgroundColor #3786be-#0568ae
	BorderColor #0568ae
	FontColor #fff
}


skinparam artifact {
	BackgroundColor #fff-#d2d2d2
	BorderColor #c2c2c2
	FontColor #5a5a5a
}


skinparam component {
	
	FontColor #fff
	BorderColor #33b2e2
	BackgroundColor #33b2e2-#009fdb

}


skinparam interface {
	BackgroundColor  #d95555
	BorderColor  #cf2a2a
	FontColor #5a5a5a
}


skinparam storage {
	BackgroundColor #ee9033-#ea7400
  	BorderColor #ea7400
	FontColor #fff
}


skinparam node {
	BackgroundColor #f5f5f5-#f2f2f2
	BorderColor #c2c2c2
	FontColor #009fdb
}


skinparam cloud {
	BackgroundColor #F2FCFE-#eeeeee
	BorderColor #F2FCFE
	FontColor #009fdb
}


skinparam database {
	
	FontColor #fff
	BorderColor #33b2e2
	BackgroundColor #33b2e2-#009fdb

	BorderColor #007faf
}


skinparam class {
	
	FontColor #fff
	BorderColor #33b2e2
	BackgroundColor #33b2e2-#009fdb

	HeaderBackgroundColor #33b2e2-#009fdb
	StereotypeFontColor #5a5a5a
	BorderThickness 1
	AttributeFontColor #d2d2d2
	AttributeFontSize 11
}


skinparam object {
	
	FontColor #fff
	BorderColor #33b2e2
	BackgroundColor #33b2e2-#009fdb

	StereotypeFontColor #5a5a5a
	BorderThickness 1
	AttributeFontColor #d2d2d2
	AttributeFontSize 11
}


skinparam usecase {
	
	FontColor #fff
	BorderColor #33b2e2
	BackgroundColor #33b2e2-#009fdb

	BorderThickness 2
	StereotypeFontColor #009fdb
}


skinparam rectangle {
		FontColor #5a5a5a
	BorderColor #c2c2c2
	BackgroundColor #fff-#fefefe
	BorderThickness 2
	StereotypeFontColor #009fdb
}


skinparam package {
	FontColor #009fdb
	BorderColor #33b2e2
	BackgroundColor transparent
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #fff-#f5f5f5
  	BorderColor #ea7400
	FontColor #ea7400
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #fff-#f5f5f5
  	BorderColor #0568ae
	FontColor #0568ae
	BorderThickness 2
}


skinparam state {
	
	FontColor #fff
	BorderColor #33b2e2
	BackgroundColor #33b2e2-#009fdb

	BorderColor #007faf
	StartColor #0568ae
	EndColor #0568ae
	AttributeFontColor #d2d2d2
	AttributeFontSize 11
}


skinparam queue {
	
	FontColor #fff
	BorderColor #33b2e2
	BackgroundColor #33b2e2-#009fdb

}


skinparam card {
	BackgroundColor #3786be-#0568ae
	BorderColor #0568ae
	FontColor #fff
}


skinparam file {
	BackgroundColor #f5f5f5-#f2f2f2
	BorderColor #0568ae
	FontColor #5a5a5a

}


skinparam stack {
	
	FontColor #fff
	BorderColor #33b2e2
	BackgroundColor #33b2e2-#009fdb

}
skinparam classFontColor darkSlateGray
skinparam interface {
  BackgroundColor white
  BorderColor black
}

package "parsly" {
  [parsly-ctl:\nCLI Rust client] <-up-> [parsly:\nPython gRPC messaging service and OpenAI client] : PDF data\nover gRPC
}
interface "\t\t\tOpenAI\n\t\t\tvia\n\t\t\tLlamaIndex" as OpenAI
[parsly:\nPython gRPC messaging service and OpenAI client] <- -right- -> OpenAI

interface "\t\t\tPDF with\n\t\t\ttabular data" as PDF
[parsly-ctl:\nCLI Rust client] <- -right- - PDF

@enduml

PlantUML version 1.2022.7(Mon Aug 22 13:01:30 EDT 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>